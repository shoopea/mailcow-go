/*
mailcow API

mailcow is complete e-mailing solution with advanced antispam, antivirus, nice UI and API.  In order to use this API you have to create a API key and add your IP address to the whitelist of allowed IPs this can be done by logging into the Mailcow UI using your admin account, then go to Configuration > Access > Edit administrator details > API. There you will find a collapsed API menu.  There are two types of API keys   - The read only key can only be used for all get endpoints   - The read write key can be used for all endpoints

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mailcow

import (
	"encoding/json"
)

// checks if the EditMailboxRatelimitsRequestAttr type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditMailboxRatelimitsRequestAttr{}

// EditMailboxRatelimitsRequestAttr struct for EditMailboxRatelimitsRequestAttr
type EditMailboxRatelimitsRequestAttr struct {
	// contains the frame for the ratelimit h,s,m
	RlFrame *string `json:"rl_frame,omitempty"`
	// contains the rate for the ratelimit 10,20,50,1
	RlValue *float32 `json:"rl_value,omitempty"`
}

// NewEditMailboxRatelimitsRequestAttr instantiates a new EditMailboxRatelimitsRequestAttr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditMailboxRatelimitsRequestAttr() *EditMailboxRatelimitsRequestAttr {
	this := EditMailboxRatelimitsRequestAttr{}
	return &this
}

// NewEditMailboxRatelimitsRequestAttrWithDefaults instantiates a new EditMailboxRatelimitsRequestAttr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditMailboxRatelimitsRequestAttrWithDefaults() *EditMailboxRatelimitsRequestAttr {
	this := EditMailboxRatelimitsRequestAttr{}
	return &this
}

// GetRlFrame returns the RlFrame field value if set, zero value otherwise.
func (o *EditMailboxRatelimitsRequestAttr) GetRlFrame() string {
	if o == nil || IsNil(o.RlFrame) {
		var ret string
		return ret
	}
	return *o.RlFrame
}

// GetRlFrameOk returns a tuple with the RlFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditMailboxRatelimitsRequestAttr) GetRlFrameOk() (*string, bool) {
	if o == nil || IsNil(o.RlFrame) {
		return nil, false
	}
	return o.RlFrame, true
}

// HasRlFrame returns a boolean if a field has been set.
func (o *EditMailboxRatelimitsRequestAttr) HasRlFrame() bool {
	if o != nil && !IsNil(o.RlFrame) {
		return true
	}

	return false
}

// SetRlFrame gets a reference to the given string and assigns it to the RlFrame field.
func (o *EditMailboxRatelimitsRequestAttr) SetRlFrame(v string) {
	o.RlFrame = &v
}

// GetRlValue returns the RlValue field value if set, zero value otherwise.
func (o *EditMailboxRatelimitsRequestAttr) GetRlValue() float32 {
	if o == nil || IsNil(o.RlValue) {
		var ret float32
		return ret
	}
	return *o.RlValue
}

// GetRlValueOk returns a tuple with the RlValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditMailboxRatelimitsRequestAttr) GetRlValueOk() (*float32, bool) {
	if o == nil || IsNil(o.RlValue) {
		return nil, false
	}
	return o.RlValue, true
}

// HasRlValue returns a boolean if a field has been set.
func (o *EditMailboxRatelimitsRequestAttr) HasRlValue() bool {
	if o != nil && !IsNil(o.RlValue) {
		return true
	}

	return false
}

// SetRlValue gets a reference to the given float32 and assigns it to the RlValue field.
func (o *EditMailboxRatelimitsRequestAttr) SetRlValue(v float32) {
	o.RlValue = &v
}

func (o EditMailboxRatelimitsRequestAttr) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditMailboxRatelimitsRequestAttr) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RlFrame) {
		toSerialize["rl_frame"] = o.RlFrame
	}
	if !IsNil(o.RlValue) {
		toSerialize["rl_value"] = o.RlValue
	}
	return toSerialize, nil
}

type NullableEditMailboxRatelimitsRequestAttr struct {
	value *EditMailboxRatelimitsRequestAttr
	isSet bool
}

func (v NullableEditMailboxRatelimitsRequestAttr) Get() *EditMailboxRatelimitsRequestAttr {
	return v.value
}

func (v *NullableEditMailboxRatelimitsRequestAttr) Set(val *EditMailboxRatelimitsRequestAttr) {
	v.value = val
	v.isSet = true
}

func (v NullableEditMailboxRatelimitsRequestAttr) IsSet() bool {
	return v.isSet
}

func (v *NullableEditMailboxRatelimitsRequestAttr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditMailboxRatelimitsRequestAttr(val *EditMailboxRatelimitsRequestAttr) *NullableEditMailboxRatelimitsRequestAttr {
	return &NullableEditMailboxRatelimitsRequestAttr{value: val, isSet: true}
}

func (v NullableEditMailboxRatelimitsRequestAttr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditMailboxRatelimitsRequestAttr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


